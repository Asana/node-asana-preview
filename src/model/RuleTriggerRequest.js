/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RuleTriggerRequest model module.
 * @module model/RuleTriggerRequest
 * @version 1.0.4
 */
class RuleTriggerRequest {
    /**
     * Constructs a new <code>RuleTriggerRequest</code>.
     * @alias module:model/RuleTriggerRequest
     * @param resource {String} The ID of the resource. For the duration of the beta, this resource is always a task, and this task must exist in the project in which the rule is created.
     * @param actionData {Object.<String, Object>} The dynamic keys and values of the request. These fields are intended to be used in the action for the rule associated with this trigger.
     */
    constructor(resource, actionData) { 
        
        RuleTriggerRequest.initialize(this, resource, actionData);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resource, actionData) { 
        obj['resource'] = resource;
        obj['action_data'] = actionData;
    }

    /**
     * Constructs a <code>RuleTriggerRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuleTriggerRequest} obj Optional instance to populate.
     * @return {module:model/RuleTriggerRequest} The populated <code>RuleTriggerRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuleTriggerRequest();

            if (data.hasOwnProperty('resource')) {
                obj['resource'] = ApiClient.convertToType(data['resource'], 'String');
            }
            if (data.hasOwnProperty('action_data')) {
                obj['action_data'] = ApiClient.convertToType(data['action_data'], {'String': Object});
            }
        }
        return obj;
    }


}

/**
 * The ID of the resource. For the duration of the beta, this resource is always a task, and this task must exist in the project in which the rule is created.
 * @member {String} resource
 */
RuleTriggerRequest.prototype['resource'] = undefined;

/**
 * The dynamic keys and values of the request. These fields are intended to be used in the action for the rule associated with this trigger.
 * @member {Object.<String, Object>} action_data
 */
RuleTriggerRequest.prototype['action_data'] = undefined;






export default RuleTriggerRequest;


/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ProjectDuplicateRequestScheduleDates} from './ProjectDuplicateRequestScheduleDates';

/**
 * The ProjectDuplicateRequest model module.
 * @module model/ProjectDuplicateRequest
 * @version 1.0.5
 */
export class ProjectDuplicateRequest {
  /**
   * Constructs a new <code>ProjectDuplicateRequest</code>.
   * @alias module:model/ProjectDuplicateRequest
   * @class
   * @param name {String} The name of the new project.
   */
  constructor(name) {
    this.name = name;
  }

  /**
   * Constructs a <code>ProjectDuplicateRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProjectDuplicateRequest} obj Optional instance to populate.
   * @return {module:model/ProjectDuplicateRequest} The populated <code>ProjectDuplicateRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ProjectDuplicateRequest();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('team'))
        obj.team = ApiClient.convertToType(data['team'], 'String');
      if (data.hasOwnProperty('include'))
        obj.include = ApiClient.convertToType(data['include'], 'String');
      if (data.hasOwnProperty('schedule_dates'))
        obj.schedule_dates = ProjectDuplicateRequestScheduleDates.constructFromObject(data['schedule_dates']);
    }
    return obj;
  }
}

/**
 * The name of the new project.
 * @member {String} name
 */
ProjectDuplicateRequest.prototype.name = undefined;

/**
 * Sets the team of the new project. If team is not defined, the new project will be in the same team as the the original project.
 * @member {String} team
 */
ProjectDuplicateRequest.prototype.team = undefined;

/**
 * Allowed values for the <code>include</code> property.
 * @enum {String}
 * @readonly
 */
ProjectDuplicateRequest.IncludeEnum = {
  /**
   * value: "members"
   * @const
   */
  members: "members",

  /**
   * value: "notes"
   * @const
   */
  notes: "notes",

  /**
   * value: "forms"
   * @const
   */
  forms: "forms",

  /**
   * value: "task_notes"
   * @const
   */
  task_notes: "task_notes",

  /**
   * value: "task_assignee"
   * @const
   */
  task_assignee: "task_assignee",

  /**
   * value: "task_subtasks"
   * @const
   */
  task_subtasks: "task_subtasks",

  /**
   * value: "task_attachments"
   * @const
   */
  task_attachments: "task_attachments",

  /**
   * value: "task_dates"
   * @const
   */
  task_dates: "task_dates",

  /**
   * value: "task_dependencies"
   * @const
   */
  task_dependencies: "task_dependencies",

  /**
   * value: "task_followers"
   * @const
   */
  task_followers: "task_followers",

  /**
   * value: "task_tags"
   * @const
   */
  task_tags: "task_tags",

  /**
   * value: "task_projects"
   * @const
   */
  task_projects: "task_projects"
};
/**
 * The elements that will be duplicated to the new project. Tasks are always included.
 * @member {module:model/ProjectDuplicateRequest.IncludeEnum} include
 */
ProjectDuplicateRequest.prototype.include = undefined;

/**
 * @member {module:model/ProjectDuplicateRequestScheduleDates} schedule_dates
 */
ProjectDuplicateRequest.prototype.schedule_dates = undefined;


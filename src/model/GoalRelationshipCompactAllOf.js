/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProjectCompact from './ProjectCompact';

/**
 * The GoalRelationshipCompactAllOf model module.
 * @module model/GoalRelationshipCompactAllOf
 * @version 1.0.3
 */
class GoalRelationshipCompactAllOf {
    /**
     * Constructs a new <code>GoalRelationshipCompactAllOf</code>.
     * A *goal relationship* is an object representing the relationship between a goal and another goal, a project, or a portfolio.
     * @alias module:model/GoalRelationshipCompactAllOf
     */
    constructor() { 
        
        GoalRelationshipCompactAllOf.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoalRelationshipCompactAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoalRelationshipCompactAllOf} obj Optional instance to populate.
     * @return {module:model/GoalRelationshipCompactAllOf} The populated <code>GoalRelationshipCompactAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoalRelationshipCompactAllOf();

            if (data.hasOwnProperty('resource_subtype')) {
                obj['resource_subtype'] = ApiClient.convertToType(data['resource_subtype'], 'String');
            }
            if (data.hasOwnProperty('supporting_resource')) {
                obj['supporting_resource'] = ApiClient.convertToType(data['supporting_resource'], ProjectCompact);
            }
            if (data.hasOwnProperty('contribution_weight')) {
                obj['contribution_weight'] = ApiClient.convertToType(data['contribution_weight'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
 * @member {module:model/GoalRelationshipCompactAllOf.ResourceSubtypeEnum} resource_subtype
 */
GoalRelationshipCompactAllOf.prototype['resource_subtype'] = undefined;

/**
 * @member {module:model/ProjectCompact} supporting_resource
 */
GoalRelationshipCompactAllOf.prototype['supporting_resource'] = undefined;

/**
 * The weight that the supporting resource's progress contributes to the supported goal's progress. This can only be 0 or 1.
 * @member {Number} contribution_weight
 */
GoalRelationshipCompactAllOf.prototype['contribution_weight'] = undefined;





/**
 * Allowed values for the <code>resource_subtype</code> property.
 * @enum {String}
 * @readonly
 */
GoalRelationshipCompactAllOf['ResourceSubtypeEnum'] = {

    /**
     * value: "subgoal"
     * @const
     */
    "subgoal": "subgoal",

    /**
     * value: "supporting_work"
     * @const
     */
    "supporting_work": "supporting_work"
};



export default GoalRelationshipCompactAllOf;


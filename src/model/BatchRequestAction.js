/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BatchRequestActionsInnerOptions from './BatchRequestActionsInnerOptions';

/**
 * The BatchRequestAction model module.
 * @module model/BatchRequestAction
 * @version 1.0.4
 */
class BatchRequestAction {
    /**
     * Constructs a new <code>BatchRequestAction</code>.
     * An action object for use in a batch request.
     * @alias module:model/BatchRequestAction
     * @param relativePath {String} The path of the desired endpoint relative to the API’s base URL. Query parameters are not accepted here; put them in `data` instead.
     * @param method {module:model/BatchRequestAction.MethodEnum} The HTTP method you wish to emulate for the action.
     */
    constructor(relativePath, method) { 
        
        BatchRequestAction.initialize(this, relativePath, method);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, relativePath, method) { 
        obj['relative_path'] = relativePath;
        obj['method'] = method;
    }

    /**
     * Constructs a <code>BatchRequestAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchRequestAction} obj Optional instance to populate.
     * @return {module:model/BatchRequestAction} The populated <code>BatchRequestAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchRequestAction();

            if (data.hasOwnProperty('relative_path')) {
                obj['relative_path'] = ApiClient.convertToType(data['relative_path'], 'String');
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], Object);
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = BatchRequestActionsInnerOptions.constructFromObject(data['options']);
            }
        }
        return obj;
    }


}

/**
 * The path of the desired endpoint relative to the API’s base URL. Query parameters are not accepted here; put them in `data` instead.
 * @member {String} relative_path
 */
BatchRequestAction.prototype['relative_path'] = undefined;

/**
 * The HTTP method you wish to emulate for the action.
 * @member {module:model/BatchRequestAction.MethodEnum} method
 */
BatchRequestAction.prototype['method'] = undefined;

/**
 * For `GET` requests, this should be a map of query parameters you would have normally passed in the URL. Options and pagination are not accepted here; put them in `options` instead. For `POST`, `PATCH`, and `PUT` methods, this should be the content you would have normally put in the data field of the body.
 * @member {Object} data
 */
BatchRequestAction.prototype['data'] = undefined;

/**
 * @member {module:model/BatchRequestActionsInnerOptions} options
 */
BatchRequestAction.prototype['options'] = undefined;





/**
 * Allowed values for the <code>method</code> property.
 * @enum {String}
 * @readonly
 */
BatchRequestAction['MethodEnum'] = {

    /**
     * value: "get"
     * @const
     */
    "get": "get",

    /**
     * value: "post"
     * @const
     */
    "post": "post",

    /**
     * value: "put"
     * @const
     */
    "put": "put",

    /**
     * value: "delete"
     * @const
     */
    "delete": "delete",

    /**
     * value: "patch"
     * @const
     */
    "patch": "patch",

    /**
     * value: "head"
     * @const
     */
    "head": "head"
};



export default BatchRequestAction;


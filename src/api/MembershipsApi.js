/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateMembership200Response from '../model/CreateMembership200Response';
import CreateMembershipRequest from '../model/CreateMembershipRequest';
import DeleteAttachment200Response from '../model/DeleteAttachment200Response';
import ErrorResponse from '../model/ErrorResponse';
import GetMemberships200Response from '../model/GetMemberships200Response';
import UpdateMembershipRequest from '../model/UpdateMembershipRequest';

/**
* Memberships service.
* @module api/MembershipsApi
* @version 1.0.3
*/
export default class MembershipsApi {

    /**
    * Constructs a new MembershipsApi. 
    * @alias module:api/MembershipsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createMembership operation.
     * @callback module:api/MembershipsApi~createMembershipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateMembership200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a membership
     * Creates a new membership in a `team`, `project`, `goal`, or `portfolio`. `Teams` or `users` can be a member of `goals`. `Project`, `team`, and `portfolios` have users as members.  Returns the full record of the newly created membership.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.optPretty Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {module:model/CreateMembershipRequest} opts.createMembershipRequest The updated fields for the membership.
     * @param {module:api/MembershipsApi~createMembershipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateMembership200Response}
     */
    createMembership(opts, callback) {
      opts = opts || {};
      let postBody = opts['createMembershipRequest'];

      let pathParams = {
      };
      let queryParams = {
        'opt_pretty': opts['optPretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateMembership200Response;
      return this.apiClient.callApi(
        '/memberships', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteMembership operation.
     * @callback module:api/MembershipsApi~deleteMembershipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteAttachment200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a membership
     * A specific, existing membership can be deleted by making a `DELETE` request on the URL for that membership.  Returns an empty data record.
     * @param {String} membershipGid Globally unique identifier for the membership.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.optPretty Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {module:api/MembershipsApi~deleteMembershipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteAttachment200Response}
     */
    deleteMembership(membershipGid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'membershipGid' is set
      if (membershipGid === undefined || membershipGid === null) {
        throw new Error("Missing the required parameter 'membershipGid' when calling deleteMembership");
      }

      let pathParams = {
        'membership_gid': membershipGid
      };
      let queryParams = {
        'opt_pretty': opts['optPretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeleteAttachment200Response;
      return this.apiClient.callApi(
        '/memberships/{membership_gid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMemberships operation.
     * @callback module:api/MembershipsApi~getMembershipsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetMemberships200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get multiple memberships
     * Returns compact `goal_membership`, `team_membership`, `project_membership`, `portfolio_membership`, or `workspace_membership` records. The possible types for `parent` in this request are `project`, `portfolio`, `team`, `goal`, and `workspace`. An additional member (user GID or team GID) can be passed in to filter to a specific membership. If a `parent` param is not provided, a `member`, `resource_subtype`, and `workspace` param must be provided.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.optPretty Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {String} opts.parent Globally unique identifier for `project`, `portfolio`,   `team`, `goal`, and `workspace`.
     * @param {String} opts.member Globally unique identifier for `team` or `user`.
     * @param {String} opts.resourceSubtype The resource_subtype to filter on. Must be provided with `member` and `workspace` if `parent` is not provided. Valid values include `team_membership`, `workspace_membership`, `portfolio_membership`
     * @param {String} opts.workspace The workspace to filter on. Must be provided with `member` and `resource_subtype` if `parent` is not provided.
     * @param {Number} opts.limit Pagination limit for the request.
     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'
     * @param {module:api/MembershipsApi~getMembershipsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetMemberships200Response}
     */
    getMemberships(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'opt_pretty': opts['optPretty'],
        'parent': opts['parent'],
        'member': opts['member'],
        'resource_subtype': opts['resourceSubtype'],
        'workspace': opts['workspace'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetMemberships200Response;
      return this.apiClient.callApi(
        '/memberships', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateMembership operation.
     * @callback module:api/MembershipsApi~updateMembershipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateMembership200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a membership
     * An existing membership can be updated by making a `PUT` request on the URL for that goal. Only the fields provided in the `data` block will be updated; any unspecified fields will remain unchanged. Memberships on `project`, `portfolio`, `team`, and `goals` can be updated.
     * @param {String} membershipGid Globally unique identifier for the membership.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.optPretty Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {module:model/UpdateMembershipRequest} opts.updateMembershipRequest The updated fields for the membership.
     * @param {module:api/MembershipsApi~updateMembershipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateMembership200Response}
     */
    updateMembership(membershipGid, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateMembershipRequest'];
      // verify the required parameter 'membershipGid' is set
      if (membershipGid === undefined || membershipGid === null) {
        throw new Error("Missing the required parameter 'membershipGid' when calling updateMembership");
      }

      let pathParams = {
        'membership_gid': membershipGid
      };
      let queryParams = {
        'opt_pretty': opts['optPretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personalAccessToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateMembership200Response;
      return this.apiClient.callApi(
        '/memberships/{membership_gid}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}

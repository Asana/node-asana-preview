/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AsanaNamedResource from './AsanaNamedResource';
import AsanaResource from './AsanaResource';
import WebhookCompactAllOf from './WebhookCompactAllOf';

/**
 * The WebhookCompact model module.
 * @module model/WebhookCompact
 * @version 1.0.3
 */
class WebhookCompact {
    /**
     * Constructs a new <code>WebhookCompact</code>.
     * @alias module:model/WebhookCompact
     * @implements module:model/AsanaResource
     * @implements module:model/WebhookCompactAllOf
     */
    constructor() { 
        AsanaResource.initialize(this);WebhookCompactAllOf.initialize(this);
        WebhookCompact.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebhookCompact</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookCompact} obj Optional instance to populate.
     * @return {module:model/WebhookCompact} The populated <code>WebhookCompact</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookCompact();
            AsanaResource.constructFromObject(data, obj);
            WebhookCompactAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('gid')) {
                obj['gid'] = ApiClient.convertToType(data['gid'], 'String');
            }
            if (data.hasOwnProperty('resource_type')) {
                obj['resource_type'] = ApiClient.convertToType(data['resource_type'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = AsanaNamedResource.constructFromObject(data['resource']);
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Globally unique identifier of the resource, as a string.
 * @member {String} gid
 */
WebhookCompact.prototype['gid'] = undefined;

/**
 * The base type of this resource.
 * @member {String} resource_type
 */
WebhookCompact.prototype['resource_type'] = undefined;

/**
 * If true, the webhook will send events - if false it is considered inactive and will not generate events.
 * @member {Boolean} active
 */
WebhookCompact.prototype['active'] = undefined;

/**
 * @member {module:model/AsanaNamedResource} resource
 */
WebhookCompact.prototype['resource'] = undefined;

/**
 * The URL to receive the HTTP POST.
 * @member {String} target
 */
WebhookCompact.prototype['target'] = undefined;


// Implement AsanaResource interface:
/**
 * Globally unique identifier of the resource, as a string.
 * @member {String} gid
 */
AsanaResource.prototype['gid'] = undefined;
/**
 * The base type of this resource.
 * @member {String} resource_type
 */
AsanaResource.prototype['resource_type'] = undefined;
// Implement WebhookCompactAllOf interface:
/**
 * If true, the webhook will send events - if false it is considered inactive and will not generate events.
 * @member {Boolean} active
 */
WebhookCompactAllOf.prototype['active'] = undefined;
/**
 * @member {module:model/AsanaNamedResource} resource
 */
WebhookCompactAllOf.prototype['resource'] = undefined;
/**
 * The URL to receive the HTTP POST.
 * @member {String} target
 */
WebhookCompactAllOf.prototype['target'] = undefined;




export default WebhookCompact;


/**
 * Asana
 * This is the interface for interacting with the Asana platform
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import GetEvents401Response from '../model/GetEvents401Response';
import GetEvents403Response from '../model/GetEvents403Response';
import GetEvents404Response from '../model/GetEvents404Response';
import GetEvents500Response from '../model/GetEvents500Response';
import GetStoriesForTask200Response from '../model/GetStoriesForTask200Response';

/**
* Stories service.
* @module api/StoriesApi
* @version 1.0.1
*/
export default class StoriesApi {

    /**
    * Constructs a new StoriesApi. 
    * @alias module:api/StoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getStoriesForTask operation.
     * @callback module:api/StoriesApi~getStoriesForTaskCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetStoriesForTask200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get stories from a task
     * Returns the compact records for all stories on the task.
     * @param {String} taskGid The task to operate on.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.optFields Defines fields to return.  Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below.  The gid of included objects will always be returned, regardless of the field options.
     * @param {Boolean} opts.optPretty Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
     * @param {Number} opts.limit The number of objects to return per page. The value must be between 1 and 100.
     * @param {String} opts.offset Offset token.  An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results.  'Note: You can only pass in an offset that was returned to you via a previously paginated request.
     * @param {module:api/StoriesApi~getStoriesForTaskCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetStoriesForTask200Response}
     */
    getStoriesForTask(taskGid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'taskGid' is set
      if (taskGid === undefined || taskGid === null) {
        throw new Error("Missing the required parameter 'taskGid' when calling getStoriesForTask");
      }

      let pathParams = {
        'task_gid': taskGid
      };
      let queryParams = {
        'opt_fields': this.apiClient.buildCollectionParam(opts['optFields'], 'csv'),
        'opt_pretty': opts['optPretty'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['personal_access_token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetStoriesForTask200Response;
      return this.apiClient.callApi(
        '/tasks/{task_gid}/stories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}

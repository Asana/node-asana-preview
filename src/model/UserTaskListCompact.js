/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserTaskListBaseOwner from './UserTaskListBaseOwner';
import UserTaskListBaseWorkspace from './UserTaskListBaseWorkspace';

/**
 * The UserTaskListCompact model module.
 * @module model/UserTaskListCompact
 * @version 1.0.4
 */
class UserTaskListCompact {
    /**
     * Constructs a new <code>UserTaskListCompact</code>.
     * A generic Asana Resource, containing a globally unique identifier.A generic Asana Resource, containing a globally unique identifier. A user task list represents the tasks assigned to a particular user. It provides API access to a userâ€™s [My Tasks](https://asana.com/guide/help/fundamentals/my-tasks) view in Asana.
     * @alias module:model/UserTaskListCompact
     */
    constructor() { 
        
        UserTaskListCompact.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserTaskListCompact</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserTaskListCompact} obj Optional instance to populate.
     * @return {module:model/UserTaskListCompact} The populated <code>UserTaskListCompact</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserTaskListCompact();

            if (data.hasOwnProperty('gid')) {
                obj['gid'] = ApiClient.convertToType(data['gid'], 'String');
            }
            if (data.hasOwnProperty('resource_type')) {
                obj['resource_type'] = ApiClient.convertToType(data['resource_type'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = UserTaskListBaseOwner.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('workspace')) {
                obj['workspace'] = UserTaskListBaseWorkspace.constructFromObject(data['workspace']);
            }
        }
        return obj;
    }


}

/**
 * Globally unique identifier of the resource, as a string.
 * @member {String} gid
 */
UserTaskListCompact.prototype['gid'] = undefined;

/**
 * The base type of this resource.
 * @member {String} resource_type
 */
UserTaskListCompact.prototype['resource_type'] = undefined;

/**
 * The name of the user task list.
 * @member {String} name
 */
UserTaskListCompact.prototype['name'] = undefined;

/**
 * @member {module:model/UserTaskListBaseOwner} owner
 */
UserTaskListCompact.prototype['owner'] = undefined;

/**
 * @member {module:model/UserTaskListBaseWorkspace} workspace
 */
UserTaskListCompact.prototype['workspace'] = undefined;






export default UserTaskListCompact;


/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectTemplateBaseRequestedDatesInner model module.
 * @module model/ProjectTemplateBaseRequestedDatesInner
 * @version 1.0.4
 */
class ProjectTemplateBaseRequestedDatesInner {
    /**
     * Constructs a new <code>ProjectTemplateBaseRequestedDatesInner</code>.
     * @alias module:model/ProjectTemplateBaseRequestedDatesInner
     */
    constructor() { 
        
        ProjectTemplateBaseRequestedDatesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectTemplateBaseRequestedDatesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectTemplateBaseRequestedDatesInner} obj Optional instance to populate.
     * @return {module:model/ProjectTemplateBaseRequestedDatesInner} The populated <code>ProjectTemplateBaseRequestedDatesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectTemplateBaseRequestedDatesInner();

            if (data.hasOwnProperty('gid')) {
                obj['gid'] = ApiClient.convertToType(data['gid'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Globally unique identifier of the date field in the project template. A value of `1` refers to the project start date, while `2` refers to the project due date.
 * @member {String} gid
 */
ProjectTemplateBaseRequestedDatesInner.prototype['gid'] = undefined;

/**
 * The name of the date variable.
 * @member {String} name
 */
ProjectTemplateBaseRequestedDatesInner.prototype['name'] = undefined;

/**
 * The description of what the date variable is used for when instantiating a project.
 * @member {String} description
 */
ProjectTemplateBaseRequestedDatesInner.prototype['description'] = undefined;






export default ProjectTemplateBaseRequestedDatesInner;

